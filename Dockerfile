# 1Ô∏è‚É£ Use Node.js 20 as the base image for building
FROM node:20-alpine AS builder

# 2Ô∏è‚É£ Set the working directory inside the container
WORKDIR /app

# 3Ô∏è‚É£ Copy package.json and package-lock.json
COPY package.json package-lock.json ./

# 4Ô∏è‚É£ Install ALL dependencies (including devDependencies)
RUN npm install

# 5Ô∏è‚É£ Copy the entire project
COPY . .

# 6Ô∏è‚É£ Copy the Docker-specific .env file
COPY .env .env

# 7Ô∏è‚É£ Build the Next.js application
RUN npm run build

# 8Ô∏è‚É£ Use a minimal Node.js 20 image for the final production container
FROM node:20-alpine AS runner

# 9Ô∏è‚É£ Set working directory
WORKDIR /app

# üîü Copy only necessary files from the builder stage
COPY --from=builder /app/package.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/.env .env

# 1Ô∏è‚É£1Ô∏è‚É£ Expose the Next.js port
EXPOSE 4000

# 1Ô∏è‚É£2Ô∏è‚É£ Start the Next.js application
CMD ["sh", "-c", "PORT=$PORT NEXTAUTH_URL=$NEXTAUTH_URL NEXTAUTH_SECRET=$NEXTAUTH_SECRET DB_HOST=$DB_HOST DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD DB_NAME=$DB_NAME DB_PORT=$DB_PORT npm run start"]